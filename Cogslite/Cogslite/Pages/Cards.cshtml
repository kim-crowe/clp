@page

@model CardsPageModel
@{
    ViewData["Title"] = "Cards - " + Model.Game.Name;
}
@section Scripts
    {
    <script type="text/javascript" src="~/js/components/ModalPrompt.js"></script>
    <script type="text/javascript" src="~/js/components/DataForm.js"></script>
    <script type="text/javascript" src="~/js/services/cardservice.js"></script>
    <script type="text/javascript" src="~/js/services/deckservice.js"></script>
    <script type="text/javascript" src="~/js/debounce.js"></script>
    <script type="text/javascript" src="~/js/card.js"></script>
}
<input type="hidden" id="af-token" value="@Html.AntiForgeryTokenOnly()" />
<input type="hidden" id="game-id" value="@Model.Game.Id.ToShortGuid()" />
<input type="hidden" id="is-signed-in" value="@Model.IsSignedIn" />
<div id="cardApp">

    <modal-form id="modal1" :options="dialog" v-on:confirm="confirmDialog($event)"></modal-form>

    <div class="cardsPanel fullwidth">
        <div>
            <img src="@Url.Page("/Image", new { imageId = @Model.Game.Id })" width="100" height="140" style="float: left" />
            <div class="card-game-title">
                <span>@Model.Game.Name</span>                
                @if (Model.IsSignedIn)
                {            
                    <a asp-page="/UploadCards" asp-route-id="@Model.Game.Id" class="btn btn-sm btn-primary mb-2 ml-2">Upload cards</a>     
                }
            </div>
        </div>
        <div class="form-inline">
            <div class="form-group mt-2 mx-2">
                <input type="text" placeholder="Filter on card name..." v-on:input="onSearchChange" class="form-control" />
            </div>
            <div class="form-group mt-2 mx-2">
                <b-select class="form-control" v-on:input="onCardTypeChanged">
                    <option value="">All card types</option>
                    @foreach (var type in Model.Game.CardTypes)
                    {
                        <option value="@type">@type</option>
                    }
                </b-select>
            </div>
            <div v-if="hasDeck" class="btn-group mt-2" data-toggle="buttons">                
                <button v-bind:class="[ {'active': !deckFilterActive}, 'btn', 'btn-secondary']" v-on:click="filterByDeck(false)">All Cards</button>
                <button v-bind:class="[ {'active': deckFilterActive}, 'btn', 'btn-secondary']" v-on:click="filterByDeck(true)">Deck Only</button>
            </div>
            <span class="mx-auto"></span>
            <div class="input-group mt-2 mx-2" v-if="hasDeck">
                <div class="input-group-prepend" v-if="deck.hasChanges">
                    <button class="input-group-text" v-on:click="saveDeck">Save</button>
                </div>
                <button v-bind:class="[{'btn-dark': !deck.hasChanges}, {'btn-warning': deck.hasChanges}, 'btn']">{{deck.name}} <span class="badge badge-light">{{cardsInDeck}}</span></button>
            </div>
            <div class="dropdown mt-2 mx-2" v-if="isSignedIn">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Deck options
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="#" v-on:click="newDeck">New deck</a>
                    <a class="dropdown-item" href="#" v-on:Click="loadDeck">Load deck</a>
                    <a class="dropdown-item" href="#" v-on:Click="showDeckUrls">Deck urls</a>
                </div>
            </div>
            <ul class="pagination justify-content-center form-group mt-2 mr-2">
                <li class="page-item"><a class="page-link" href="#" v-on:click="firstPage"><i class="fa fa-angle-double-left"></i></a></li>
                <li class="page-item"><a class="page-link" href="#" v-on:click="previousPage"><i class="fa fa-angle-left"></i></a></li>
                <li class="page-item active"><a class="page-link" href="#">Page {{search.page}} of {{numberOfPages}}</a></li>
                <li class="page-item"><a class="page-link" href="#" v-on:click="nextPage"><i class="fa fa-angle-right"></i></a></li>
                <li class="page-item"><a class="page-link" href="#" v-on:click="lastPage"><i class="fa fa-angle-double-right"></i></a></li>
            </ul>
        </div>
        <ul class="card-list" style="clear: both">
            <li class="card-info" v-for="card in cards">
                <div v-bind:class="[{'card-count': cardCount(card) > 0}, 'card','m-2']" :data-card-count="cardCount(card)">
                    <img class="card-img-top" v-bind:src="imageUrl(card)" style="width: 210px; height: 280px;" />
                    <div class="card-img-overlay show-on-hover card-options text-center" style="height: 280px; padding-top: 170px;">
                        <div class="input-group" v-if="hasDeck">
                            <div class="input-group-prepend">
                                <a class="input-group-text" href="#" v-on:click="removeCard(card)">
                                    <i class="fa fa-minus"></i>
                                </a>
                            </div>
                            <input type="text" class="form-control text-center" :value="cardCount(card)" readonly>
                            <div class="input-group-append">
                                <a class="input-group-text" href="#" v-on:click="addCard(card)"><i class="fa fa-plus"></i></a>
                            </div>
                        </div>
                        <button class="btn btn-dark mt-2 px-4" v-on:click="showDetails(card)">Details</button>
                    </div>
                    <div class="card-body p-0">
                        <p class="text-center text-truncate mt-2">{{card.name}}</p>
                    </div>
                </div>
            </li>
        </ul>
    </div>
</div>